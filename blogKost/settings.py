"""
Django settings for blogKost project.

Generated by 'django-admin startproject' using Django 1.8.4.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '(@#jf4_s95tp@=69l!30zzv$_0czq&&vruvm65r7_%6ts!43)o'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# import random
#  Если имя не удалось получить, то можно его сгенерировать
# SOCIAL_AUTH_DEFAULT_USERNAME = lambda: random.choice(['Darth_Vader', 'Obi-Wan_Kenobi', 'R2-D2', 'C-3PO', 'Yoda'])
# # Разрешаем создавать пользователей через social_auth
# SOCIAL_AUTH_CREATE_USERS = True
#
# # Перечислим pipeline, которые последовательно буду обрабатывать респонс
# SOCIAL_AUTH_PIPELINE = (
#     # Получает по backend и uid инстансы social_user и user
#     'social_auth.backends.pipeline.social.social_auth_user',
#     # Получает по user.email инстанс пользователя и заменяет собой тот, который получили выше.
#     # Кстати, email выдает только Facebook и GitHub, а Vkontakte и Twitter не выдают
#     'social_auth.backends.pipeline.associate.associate_by_email',
#     # Пытается собрать правильный username, на основе уже имеющихся данных
#     'social_auth.backends.pipeline.user.get_username',
#     # Создает нового пользователя, если такого еще нет
#     'social_auth.backends.pipeline.user.create_user',
#     # Пытается связать аккаунты
#     'social_auth.backends.pipeline.social.associate_user',
#     # Получает и обновляет social_user.extra_data
#     'social_auth.backends.pipeline.social.load_extra_data',
#     # Обновляет инстанс user дополнительными данными с бекенда
#     'social_auth.backends.pipeline.user.update_user_details'
# )
#
# VK_APP_ID = '5036260'
# VKONTAKTE_APP_ID = VK_APP_ID
# VK_API_SECRET = 'ZggAuj7WU5SD6nA2Xhrf'
# VKONTAKTE_APP_SECRET = VK_API_SECRET
#
# AUTHENTICATION_BACKENDS = (
#     'social_auth.backends.twitter.TwitterBackend',
#     'social_auth.backends.facebook.FacebookBackend',
#     'social_auth.backends.contrib.vk.VKOAuth2Backend',
#     'social_auth.backends.google.GoogleOAuth2Backend',
#     'social_auth.backends.contrib.github.GithubBackend',
#     'django.contrib.auth.backends.ModelBackend',
# )


# Application definition

INSTALLED_APPS = (

    'ckeditor',
    'embed_video',
    'article',
    'loginsys',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'guardian',
    'easy_thumbnails',
    'mptt',
    # 'social_auth',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',  # default
    'guardian.backends.ObjectPermissionBackend',
)

ANONYMOUS_USER_ID = -1

ROOT_URLCONF = 'blogKost.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates'),
            os.path.join(BASE_DIR, 'article/templates'),
            os.path.join(BASE_DIR, 'loginsys/templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                # Insert your TEMPLATE_CONTEXT_PROCESSORS here or use this
                # list if you haven't customized them:
                'django.contrib.auth.context_processors.auth',
                'django.template.context_processors.debug',
                'django.template.context_processors.i18n',
                'django.template.context_processors.media',
                'django.template.context_processors.static',
                'django.template.context_processors.tz',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


WSGI_APPLICATION = 'blogKost.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'blogkost',
        'USER': 'skylife',
        'PASSWORD': 'skywww123',
        'HOST': '',
        'PORT': '',
    }
}


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'ru-RU'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


STATIC_URL = '/static/'
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
    os.path.join(BASE_DIR, 'article/static'),
    # ("static", "/Users/vladimirnybozhinsky/Documents/DjangoProjects/blogKostEnv/blogKost11"),
    # ("static", "/Users/vladimirnybozhinsky/Documents/DjangoProjects/blogKostEnv/blogKost11/article/"),
)
IMAGE_UPLOAD_DIR = "img"

CKEDITOR_UPLOAD_PATH = "uploads/"

MEDIA_URL = '/media/'

MEDIA_ROOT = (
    os.path.join(BASE_DIR, 'media')
)

deploy_env = os.environ.get('DEPLOYMENT_ENVIRONMENT', '')
if deploy_env == 'production':
    pass
elif deploy_env == 'staging':
    try:
        from settings_dev_heroku import *
    except ImportError:
        pass
else:
    try:
        from settings_local import *
        INSTALLED_APPS = INSTALLED_APPS + ('debug_toolbar',)
    except ImportError:
        pass
